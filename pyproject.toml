[tool.poetry]
name = "trainkit"
version = "1.0.0-preview.2"
description = ""
authors = ["Ignat Legeza <ign.legeza@gmail.com>"]
repository = "https://github.com/vlipper/trainkit"
exclude = ["**/tmp"]

[tool.poetry.dependencies]
python = ">=3.8.0,<3.9"
hydra-core = "~1.1.1"
numpy = "~1.21.5"
python-dotenv = "~0.19.2"
scikit-learn = "~1.0.2"
scipy = "~1.8.0"
tensorboard = "~2.8.0"
torch = "~1.11.0"
tqdm = "~4.63.0"
redis = { version = "~4.1.4", optional = true }
rq = { version = "~1.10.1", optional = true }
albumentations = { version = "~1.1.0", optional = true }
opencv-python-headless = { version = "~4.5.5", optional = true }
librosa = { version = "~0.9.1", optional = true }
neptune-client = { version = "~0.15.1", optional = true }
pytest = { version = "~7.0.1", optional = true }

[tool.poetry.extras]
audio = ["librosa"]
image = ["albumentations", "opencv-python-headless"]
neptune = ["neptune-client"]
queue = ["redis", "rq"]
test = ["pytest"]
all = [
    "librosa",
    "albumentations",
    "opencv-python-headless",
    "neptune-client",
    "redis",
    "rq",
    "pytest",
]

[tool.poetry.dev-dependencies]
black = "~22.1.0"
pydocstyle = "~6.1.1"
pylint = "~2.12.2"
pytest = "~7.0.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
skip-string-normalization = true
target-version = ["py38"]

[tool.pydocstyle]
ignore = "D1"
convention = "google"

[tool.pylint."FORMAT"]
max-line-length = 100
[tool.pylint."MESSAGES CONTROL"]
disable = [
    "invalid-name",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
]
# [tool.pylint."REPORTS"]
# score = "no"

[tool.pytest.ini_options]
addopts = "--basetemp=./pytest-logs/"
log_cli = true
log_cli_level = "INFO"
